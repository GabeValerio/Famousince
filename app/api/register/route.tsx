import { supabase } from "@/lib/supabaseClient";
import bcrypt from "bcryptjs"; 
import { NextRequest } from 'next/server'; 

export async function POST(req: NextRequest) {
  const { name, email, password } = await req.json();

  try {
    // Hash the password
    const hashedPassword = await bcrypt.hash(password, 10);

    // Prepare user data matching our table schema
    const userData = { 
      email,
      hashed_password: hashedPassword,
      name,
      role: "user"
      // created_at will be set by default in the database
      // id will be generated by gen_random_uuid() in the database
    };

    // Add the user to Supabase
    const { data, error } = await supabase
      .from("users")
      .insert([userData])
      .select(); // Add select to get back the created user data

    if (error) {
      return new Response(
        JSON.stringify({ 
          error: error.code === '23505' ? 'Email already exists' : error.message 
        }), 
        { status: error.code === '23505' ? 409 : 400 }
      );
    }

    return new Response(JSON.stringify({ data }), { status: 201 });
  } catch (err) {
    return new Response(
      JSON.stringify({ error: "An unexpected error occurred during registration." }), 
      { status: 500 }
    );
  }
}
